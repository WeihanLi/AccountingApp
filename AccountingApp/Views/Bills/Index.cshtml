@model IEnumerable<AccountingApp.Models.Bill>
@{
    ViewData["Title"] = "账单管理";
}
<div class="table-wraper">
    <div class="table-header">
        <h3 class="table-title">@ViewData["Title"]</h3>
    </div>
    <p>
        <a asp-action="Create"><h4>添加新账单</h4></a>
    </p>
    <div class="table-body" id="div_main">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.BillTitle)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BillType)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BillFee)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BillDetails)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BillStatus)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CreatedBy)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CreatedTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UpdatedBy)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UpdatedTime)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

            </tbody>
        </table>
    </div>
    <div id="pager"></div>
</div>
@section Scripts{
    <script>
        //生成页码条方法（翻页方法名,页码条容器，当前页码，总页数，页码组容量，总行数）
        function generatePager(jsMethodName, pageContainer, pgIndex, pgCount, gpSize, rowsCount) {
            if (rowsCount > 0) {
                var groupFirstPageIndex = 0;  //当前页码组的第一个页码
                var groupCount = 0; //页码组个数
                //var pageContainer = document.getElementById("pageDiv");
                //获得当前页码组 的 第一个页码 ，为了 在点击 NextGroup 时
                //这样：1.加上 3 就可以获得 【下一个页码组】的 第一页
                //            2.减去1 就可以获得 【上一个页码组】的最后一页
                groupFirstPageIndex = (Math.floor(((pgIndex - 1) / gpSize)) * gpSize) + 1;
                //获得页码组总个数
                groupCount = Math.ceil(pgCount / gpSize);
                //生成统计数据
                pageContainer.innerHTML = "页码：" + pgIndex + "/" + pgCount + " │ 共" + rowsCount + "条";
                //生成 上一个页码组 按钮
                var pagePrevGroup = document.createElement("a");
                if (groupFirstPageIndex > 1) {
                    pagePrevGroup.onclick = function () {
                        pgIndex = groupFirstPageIndex - 1;
                        jsMethodName(groupFirstPageIndex - 1);
                    };
                }
                pagePrevGroup.innerHTML = "上一组";
                pageContainer.appendChild(pagePrevGroup);
                //生成 上一页 按钮
                var pagePrev = document.createElement("a");
                pagePrev.onclick = function () {
                    if (pgIndex > 1) {
                        pgIndex--;
                        jsMethodName(pgIndex);
                    } else {
                        layer.msg("已经是第一页咯~~！");
                        return;
                    }
                };
                pagePrev.innerHTML = "上一页";
                pageContainer.appendChild(pagePrev);

                //按照 页码组容量 和当前页码组 来生成 页码
                var tempI = 0;
                tempI = groupFirstPageIndex;//此时获得的是当前页码组的第一页
                do {
                    //页码按钮
                    var pageA;
                    if (tempI == pgIndex) {//如果 当前生成页码 和 当前访问的页码 相等，则生成 文本，而不是超链接
                        pageA = document.createTextNode(tempI);
                    } else {//否则 生成超链接页码按钮
                        pageA = document.createElement("a");
                        //pageA.href = "javascript:jsMethodName(" + tempI + ");";
                        pageA.href = "javascript:void(0)";
                        pageA.setAttribute("pi", tempI);
                        pageA.onclick = function () { jsMethodName(this.getAttribute("pi")) };
                        pageA.innerHTML = tempI;
                    }
                    pageContainer.appendChild(pageA);
                    tempI++;
                } while (tempI < groupFirstPageIndex + gpSize && tempI <= pgCount);//1.不能超过当前页码组最后一个下标 2.不能超过总页数
                //生成下一页
                var pageNext = document.createElement("a");
                pageNext.onclick = function () {
                    //判断 当前页码 是否小于 总页数
                    if (pgIndex < pgCount) {
                        pgIndex++;
                        jsMethodName(pgIndex);
                    } else {
                        layer.msg("已经是最后一页咯~~！");
                        return;
                    }
                };
                pageNext.innerHTML = "下一页";
                pageContainer.appendChild(pageNext);

                //生成 NextGroup
                var pageNextGroup = document.createElement("a");
                if (groupFirstPageIndex + gpSize <= pgCount) {
                    pageNextGroup.onclick = function () {
                        pgIndex = groupFirstPageIndex + gpSize;
                        jsMethodName(groupFirstPageIndex + gpSize);
                    };
                }
                pageNextGroup.innerHTML = "下一组";
                pageContainer.appendChild(pageNextGroup);

                var sel = document.createElement("select");
                sel.onchange = function () {
                    var pi = this.value;
                    jsMethodName(pi);
                }
                for (var i = 0; i < pgCount; i++) {
                    var opt = new Option("第" + (i + 1) + "页", i + 1);
                    if (i == (pgIndex - 1))
                        opt.selected = true;
                    sel.options.add(opt);
                }
                pageContainer.appendChild(sel);
            }
            else {
                pageContainer.innerHTML = "暂无数据";
            }
        };
        var pageIndex = 1, pageSize = 10;
        function apply(id, status) {
            //update status
            //console.log(id + "," + status);
            if (id <= 0 || status <= 0) {
                return;
            }
            layer.confirm("这个操作将要更新账单状态，是否继续？", function (index) {
                var loading = layer.load(2);
                $.post('@Url.Action("UpdateBillStatus")', { "id": id, "status": status }, function (data) {
                    if (data.status == 200) {
                        layer.msg("操作成功");
                        location.reload();
                    } else {
                        layer.msg(data.msg);
                    }
                    layer.close(loading);
                });
                layer.close(index);
            });
        }
        function loadData(pageNum) {
            if (pageNum) {
                pageIndex = pageNum;
            } else {
                pageIndex = 1;
            }
            var loading = layer.load(2);
            $.getJSON('@Url.Action("List")', { "pageIndex": pageIndex, "pageSize": pageSize }, function (data) {
                if (data.TotalCount > 0) {
                    var html = '';
                    for (var i = 0; i < data.Data.length; i++) {
                        var _billStatus = '新建';
                        var btnText = '<button type="button" class="btn btn-success btn-sm" onclick="apply(' + data.Data[i].PKID + ',1)">申请报销</button>';
                        switch (data.Data[i].BillStatus) {
                            case 1:
                                _billStatus = "申请报销";
                                btnText = '<button type="button" class="btn btn-danger btn-sm" onclick="apply(' + data.Data[i].PKID + ',3)">取消申请</button>&nbsp;<button type="button" class="btn btn-success btn-sm" onclick="apply(' + data.Data[i].PKID + ',2)">确认报销</button>';
                                break;
                            case 2:
                                _billStatus = "已报销";
                                btnText = '<label>该账单已报销</label>';
                                break;
                            case 3:
                                _billStatus = "已取消申请报销";
                                btnText = '<label>该账单已取消申请报销，无需操作</label>';
                                break;
                        }
                        var tml = '<tr>\
                        <td>'+ data.Data[i].BillTitle +'</td>\
                        <td>'+ data.Data[i].AccountBillType.TypeName +'</td>\
                        <td>'+ data.Data[i].BillFee +'</td>\
                        <td>'+ data.Data[i].BillDetails +'</td>\
                        <td>'+ _billStatus +'</td>\
                        <td>'+ data.Data[i].CreatedBy +'</td>\
                        <td>'+ data.Data[i].CreatedTime +'</td>\
                        <td>'+ data.Data[i].UpdatedBy +'</td>\
                        <td>'+ data.Data[i].UpdatedTime + '</td>\
                        <td>'+ btnText + ' | <a href="/Bills/Edit/' + data.Data[i].PKID + '">编辑</a> | <a href="/Bills/Delete/' + data.Data[i].PKID +'">删除</a></td>\
                        </tr>';
                        html += tml;
                    }
                    $("#div_main > table > tbody").html(html);
                    // generate pager
                    generatePager(loadData, document.getElementById("pager"), data.PageIndex, data.PageCount, 4, data.TotalCount);
                } else {
                    layer.msg('没有数据');
                }
                layer.close(loading);
            });
        }
        //DOM Ready
        $(function () {
            loadData();
        });
    </script>
}