apiVersion: apps/v1
kind: Deployment
metadata:
  name: accountingapp-deployment
  labels:
    app: accountingapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: accountingapp
  minReadySeconds: 0
  strategy:
    type: RollingUpdate # 策略类型，使用RollingUpdate可以保证部署期间服务不间断
    rollingUpdate:
      maxUnavailable: 1 # 部署时最大允许停止的Pod数量（与replicas相比）
      maxSurge: 1 # 部署时最大允许创建的Pod数量（与replicas相比）

  template: # 用来指定Pod的模板，与Pod的定义类似
    metadata:
      labels: # 根据模板创建的Pod会被贴上该标签，与上面的matchLabels对应
        app: accountingapp
    
    spec:
      containers:
        - name: accountingapp
          image: weihanli/accountingapp:latest
          imagePullPolicy: Always # 默认是IfNotPresent，如果设置成Always，则每一次部署都会重新拉取容器映像（否则，如果本地存在指定的镜像版本，就不会再去拉取）
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 120
            periodSeconds: 60
          livenessProbe: # 存活探针定义
            httpGet:
              path: /Health #存活探针请求路径
              port: 80 #存活探针请求端口
            initialDelaySeconds: 120
            periodSeconds: 60
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: accountingapp
spec:
  selector:
    app: accountingapp
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 31254
  type: NodePort